var fs = require("fs");

var commands = {
  ANALOG_MAPPING_QUERY: "0x69",
  ANALOG_MAPPING_RESPONSE: "0x6A",
  ANALOG_MESSAGE: "0xE0",
  CAPABILITY_QUERY: "0x6B",
  CAPABILITY_RESPONSE: "0x6C",
  DIGITAL_MESSAGE: "0x90",
  END_SYSEX: "0xF7",
  EXTENDED_ANALOG: "0x6F",
  I2C_CONFIG: "0x78",
  I2C_REPLY: "0x77",
  I2C_REQUEST: "0x76",
  ONEWIRE_CONFIG_REQUEST: "0x41",
  ONEWIRE_DATA: "0x73",
  ONEWIRE_DELAY_REQUEST_BIT: "0x10",
  ONEWIRE_READ_REPLY: "0x43",
  ONEWIRE_READ_REQUEST_BIT: "0x08",
  ONEWIRE_RESET_REQUEST_BIT: "0x01",
  ONEWIRE_SEARCH_ALARMS_REPLY: "0x45",
  ONEWIRE_SEARCH_ALARMS_REQUEST: "0x44",
  ONEWIRE_SEARCH_REPLY: "0x42",
  ONEWIRE_SEARCH_REQUEST: "0x40",
  ONEWIRE_WITHDATA_REQUEST_BITS: "0x3C",
  ONEWIRE_WRITE_REQUEST_BIT: "0x20",
  PIN_MODE: "0xF4",
  PIN_STATE_QUERY: "0x6D",
  PIN_STATE_RESPONSE: "0x6E",
  PING_READ: "0x75",
  PULSE_IN: "0x74",
  PULSE_OUT: "0x73",
  QUERY_FIRMWARE: "0x79",
  REPORT_ANALOG: "0xC0",
  REPORT_DIGITAL: "0xD0",
  REPORT_VERSION: "0xF9",
  SAMPLING_INTERVAL: "0x7A",
  SERVO_CONFIG: "0x70",
  START_SYSEX: "0xF0",
  STEPPER: "0x72",
  STRING_DATA: "0x71",
  SYSTEM_RESET: "0xff",
};


var targets = Object.keys(commands).reduce(function(accum, command) {
  accum[commands[command]] = command;
  return accum;
}, {});

fs.readFile("test/firmata.test.js", "utf8", function(err, source) {

  Object.keys(targets).forEach(function(target) {
    var replacement = targets[target];

    var rexp = new RegExp(target, "g");

    source = source.replace(rexp, replacement);
  });


  fs.writeFile("test/firmata.test.js", source, "utf8");
});
